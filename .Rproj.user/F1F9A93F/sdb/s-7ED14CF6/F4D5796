{
    "contents" : "\ncreate_event_table<-function(x){\n  ####################GET UPCOMING EVENT URLS#####################\n  event_urls<- x %>%\n    html_nodes(\"i a\") %>%\n    html_attrs() %>%\n    as.list()\n  \n  tags<-(\"http\\\\:(//www.fightmetric.com\\\\/event-details\\\\/)(.){16}\")\n  event_urls<-str_extract_all(event_urls, tags)\n  \n  ####################GET UPCOMING EVENT DATES#####################\n  event_dates<- x %>%\n    html_nodes(\"i span\") %>%\n    html_text() %>%\n    as.list()\n  \n  tags<-(\"[A-Z]\\\\w+\\\\s\\\\d\\\\d.\\\\s\\\\d\\\\d\\\\d\\\\d\")\n  event_dates<-str_extract_all(event_dates,tags)\n  \n  y<-cbind(event_urls,event_dates)\n  return(y)\n}\n\n\nget_event_stats<-function(x){\n  ############# GET FIGHTERS BASED ON EVENT URL #######\n  fight<-read_html(x)\n  stats<- fight %>%\n    html_nodes(\"td p\") %>%\n    html_text()\n  \n  ########## LOOP FIGHTERS TO TABLE ###################\n  hld<-NULL;wincol<-NULL;name<-NULL;\n  strikes<-NULL;takedowns<-NULL;subattempts<-NULL;\n  pospass<-NULL;weightclass<-NULL;result<-NULL;\n  round<-NULL;time<-NULL;\n  \n  for(i in seq(1,length(stats),16)){\n    if(str_trim(stats[i]) == \"win\"){\n      wincol[1] <- 1\n      wincol[2] <- 0\n      name[1] <- toupper(str_trim(stats[i+1]))\n      name[2] <- toupper(str_trim(stats[i+2]))\n      strikes[1] <- str_trim(stats[i+3])\n      strikes[2] <- str_trim(stats[i+4])\n      takedowns[1] <- str_trim(stats[i+5])\n      takedowns[2] <- str_trim(stats[i+6])\n      subattempts[1] <- str_trim(stats[i+7])\n      subattempts[2] <- str_trim(stats[i+8])\n      pospass[1] <- str_trim(stats[i+9])\n      pospass[2] <- str_trim(stats[i+10])\n      weightclass[1] <- str_trim(stats[i+11])\n      weightclass[2] <- str_trim(stats[i+11])\n      result[1] <- str_trim(stats[i+12])\n      result[2] <- str_trim(stats[i+12])\n      round[1] <- str_trim(stats[i+14])\n      round[2] <- str_trim(stats[i+14])\n      time[1] <- str_trim(stats[i+15])\n      time[2] <- str_trim(stats[i+15])\n      hldrow<-cbind(wincol,name,strikes,takedowns,subattempts,pospass,weightclass,result,round,time)\n      hld<-rbind(hld,hldrow)\n    }\n    if(str_trim(stats[i]) == \"draw\"){\n      wincol[1] <- \"\"\n      wincol[2] <- \"\"\n      name[1] <- toupper(str_trim(stats[i+2]))\n      name[2] <- toupper(str_trim(stats[i+3]))\n      strikes[1] <- str_trim(stats[i+4])\n      strikes[2] <- str_trim(stats[i+5])\n      takedowns[1] <- str_trim(stats[i+6])\n      takedowns[2] <- str_trim(stats[i+7])\n      subattempts[1] <- str_trim(stats[i+8])\n      subattempts[2] <- str_trim(stats[i+9])\n      pospass[1] <- str_trim(stats[i+10])\n      pospass[2] <- str_trim(stats[i+11])\n      weightclass[1] <- str_trim(stats[i+12])\n      weightclass[2] <- str_trim(stats[i+12])\n      result[1] <- str_trim(stats[i+13])\n      result[2] <- str_trim(stats[i+13])\n      round[1] <- str_trim(stats[i+14])\n      round[2] <- str_trim(stats[i+14])\n      time[1] <- str_trim(stats[i+15])\n      time[2] <- str_trim(stats[i+15])\n      hldrow<-cbind(wincol,name,strikes,takedowns,subattempts,pospass,weightclass,result,round,time)\n      hld<-rbind(hld,hldrow)\n    }\n    \n  }\n  return(hld)\n}\n\n\npull_upcoming_fighters<-function(x){\n  fight<-read_html(as.character(up_events[1]))\n  event<- fight %>%\n    html_nodes(\"td p\") %>%\n    html_text()\n  \n  hld<-NULL;name<-NULL;weight<-NULL;against<-NULL;\n  for(i in seq(1,length(event),10)){\n    name[1] <- toupper(str_trim(event[i+2]))\n    name[2] <- toupper(str_trim(event[i+3]))\n    against[1] <- str_trim(event[i+3])\n    against[2] <- str_trim(event[i+2])\n    weight[1] <- str_trim(event[i+5])\n    weight[2] <- str_trim(event[i+5])\n    hldrow<-cbind(name,against,weight)\n    hld<-rbind(hld,hldrow)\n  }\n  return(hld)\n}\n\n\nget_fighter_fights<-function(x){\n  hld<-NULL\n  for(i in seq(1,length(fighter_table[,2]),1)){\n    if(as.character(x) == as.character(fighter_table[i,2])){\n      if(fighter_table[i,1] == \"1\"){\n        hldf <- fighter_table[i,]\n        hldo <- fighter_table[i+1,]\n        hld<-rbind(hld,hldf,hldo)\n      }\n      if(fighter_table[i,1] == \"0\"){\n        hldf <- fighter_table[i,]\n        hldo <- fighter_table[i-1,]\n        hld<-rbind(hld,hldf,hldo)\n      }\n    }\n  }\n  return(hld)\n}\n\n\ncalculate_table_score<-function(x){\n  hld<-NULL\n  for(i in seq(1,length(x[,c(\"name\")]),1)){\n    score<-0\n    if(x[i,c(\"wincol\")]==\"1\"){\n      if(str_detect(x[i,c(\"result\")],\"KO\")==TRUE | str_detect(x[i,c(\"result\")],\"SUB\")==TRUE){\n        if(x[i,c(\"round\")]==\"1\"){score<-100}\n        if(x[i,c(\"round\")]==\"2\"){score<-70}\n        if(x[i,c(\"round\")]==\"3\"){score<-50}\n        if(x[i,c(\"round\")]==\"4\"){score<-40}\n        if(x[i,c(\"round\")]==\"5\"){score<-40}\n      }\n      if(str_detect(x[i,c(\"result\")],\"DEC\")==TRUE){score<-25}\n    }\n    score <- score + (as.numeric(x[i,c(\"strikes\")])*.5)\n    score <- score + (as.numeric(x[i,c(\"takedowns\")])*2)\n    hld <- rbind(hld,score)\n    colnames(hld)<-c(\"score\")\n  }\n  #MIGHT WANT TO PUT A SUM ROW!\n  return(hld)\n}\n\n\nget_betting_odds<-function(x){\n  vegas<-read_html('http://www.gamblerspalace.com/lines/martial-arts/')\n  odds<- vegas %>%\n    html_nodes(\"tr td\") %>%\n    html_text()\n  up_odds<-NULL\n  for(i in seq(1,length(odds),1)){\n    if(str_detect(odds[i],\"^[A-Z][a-z]+\\\\s.+\") & str_trim(odds[i]) != \"Bet Now\"){\n      h1<-toupper(odds[i])\n      h2<-odds[i+3]\n      hld<-cbind(h1,h2)\n      up_odds<-rbind(up_odds,hld)\n    }\n  }\n  colnames(up_odds)<-c(\"name\",\"ou\")\n  return(up_odds)\n}\n\n\nget_fights_sums<-function(x){\n  hld<-NULL\n  for(i in seq(1,length(x[,1]),1)){\n    fights<-NULL\n    try(fights<-read.csv(file=paste(local_path,x[i,c(\"name\")],\".csv\")), TRUE)\n    if(is.null(fights)==FALSE){\n      fights<-as.data.frame(fights)\n      fights<-fights[fights$name==as.character(x[i,c(\"name\")]),c(\"score\")]\n      fights<-summary(fights)\n      fights<-fights[c(\"Min.\", \"Mean\", \"Max.\")]\n      h1<-x[i,]\n      h2<-cbind(fights[1],fights[2],fights[3])\n      colnames(h2)<-c(\"min\",\"avg\",\"max\")\n      hr<-cbind(h1,h2)\n      hld<-rbind(hld,hr)\n    } else {\n      hr<-cbind(x[i,], \"NA\",\"NA\",\"NA\")\n      colnames(hr)<-c(colnames(x),\"min\",\"avg\",\"max\")\n      hld<-rbind(hld,hr)\n    }\n  }\n  return(hld)\n}\n\n\n\ncreate_fights_view<-function(x){\n  hld<-NULL;nmlst<-NULL;\n  for(i in seq_along(x[,1])){\n    name<-as.character(x[i,1])\n    found <-FALSE\n    if(is.null(nmlst)==TRUE){\n      for(j in seq_along(x[,1])){\n        if(name == as.character(x[j,2])){\n          h1<-as.data.frame(x[i,])\n          names(h1)<-paste0(names(h1),\"_f1\")\n          h1<-h1[,!(names(h1) %in% c(\"against_f1\"))]\n          h2<-as.data.frame(x[j,])\n          names(h2)<-paste0(names(h2),\"_f2\")\n          h2<-h2[,!(names(h2) %in% c(\"against_f2\"))]\n          hr<-cbind(h1,h2)\n          hld<-rbind(hld,hr)\n          nmlst<-c(as.character(x[j,1]),as.character(x[j,2]))\n          hr<-NULL\n        }\n      }\n    }\n    for(k in seq_along(nmlst)){if(name == as.character(nmlst[k])){found<-TRUE}}\n    if(found == FALSE){\n      for(j in seq_along(x[,1])){\n        if(name == as.character(x[j,2])){\n          h1<-as.data.frame(x[i,])\n          names(h1)<-paste0(names(h1),\"_f1\")\n          h1<-h1[,!(names(h1) %in% c(\"against_f1\"))]\n          h2<-as.data.frame(x[j,])\n          names(h2)<-paste0(names(h2),\"_f2\")\n          h2<-h2[,!(names(h2) %in% c(\"against_f2\"))]\n          hr<-cbind(h1,h2)\n          hld<-rbind(hld,hr)\n          nmlst<-c(nmlst, as.character(x[j,1]), as.character(x[j,2]))\n          hr<-NULL\n        }\n      }\n    } \n  }\n  return(hld)\n}\n\n\nappend_dk<-function(x,y){\n  hldrow<-NULL;hld<-NULL;\n  for(i in seq(1,length(x[,1]),1)){\n    name<-as.character(x[i,1])\n    for(k in seq(1,length(y[,1]),1)){\n      if(as.character(y[k,2])==name){\n        salary<-as.character(y[k,3])\n        id<-as.character(y[k,1])\n      }\n    } \n    hldrow<-cbind(x[i,], id, salary)\n    hld<-rbind(hld,hldrow)\n  }  \n  return(hld)\n}\n\n\n\n\n\nfix_odds_names<-function(x){\n  hr<-NULL;hld<-NULL\n  for(i in seq(1,length(x[,1]),1)){\n    if (x[i,1] == \"LUIS HENRIQUE DA SILVA\"){hr <- cbind(\"HENRIQUE DA SILVA\", x[i,2])}\n    else if (x[i,1] == \"JOSH BURKMAN\"){hr <- cbind(\"JOSHUA BURKMAN\", x[i,2])}\n    ###ADD MORE AS FOUND (WILL SHOW WARNINGS IF FAILS)###\n    else {hr<-x[i,]}\n    colnames(hr)<-colnames(x)\n    hld<-rbind(hld,hr)\n  }\n  return(hld)\n}\n\n\n\n\nappend_dk_salary<-function(x,y){\n  hldrow<-NULL;hld<-NULL;\n  for(i in seq(1,length(x[,1]),1)){\n    name<-as.character(x[i,1])\n    for(k in seq(1,length(y[,1]),1)){\n      if(as.character(y[k,2])==name){\n        salary<-as.character(y[k,4])\n      }\n    } \n    hldrow<-cbind(x[i,], salary)\n    hld<-rbind(hld,hldrow)\n  }  \n  return(hld)\n}\n\n\n\nformat_to_dk<-function(x,y){\n  hld<-NULL\n  for(i in seq(1,length(x[1,]),1)){\n    hldrow<-c(x[1,i],x[2,i],x[3,i],x[4,i],x[5,i],x[6,i])\n    hld<-rbind(hld,hldrow)\n  }\n  dklus<-NULL;hr<-NULL;\n  for(k in seq(1,length(hld[,1]),1)){\n    for(i in seq(1,length(hld[1,]),1)){\n      name<-as.character(hld[k,i])\n      for(j in seq(1,length(y[,1]),1)){\n        if(as.character(y[j,2])==name){\n          if(is.null(hr)==FALSE){hr<-cbind(hr, as.character(y[j,1]))}\n          else {hr<-as.character(y[j,1]);}\n        }\n      }\n    }\n    dklus<-rbind(dklus,hr)\n    hr<-NULL\n  }\n  colnames(dklus)<-c(\"F\",\"F\",\"F\",\"F\",\"F\",\"F\")\n  rownames(dklus)<-c(seq(1,length(dklus[,1]),1))\n  return(dklus)\n}\n\n\n\nget_all_lineups<-function(x){\n  \n  #ALL POSSIBLE COMBOS GIVEN ENTRY\n  #SUMS PROJECTION AND SALARY (FROM ENTRY)\n  hld<-combn(x[,1],6)\n  hld<-as.data.frame(hld)\n  hldrow1<-NULL;hldrow2<-NULL;\n  for(i in seq(1,length(colnames(hld)),1)){\n    score<-0\n    salary<-0\n    for(j in seq(1,length(hld[,1]),1)){\n      name <- hld[j,i]\n      for(k in seq(1,length(x[,1]),1)){\n        if(as.character(x[k,1]) == as.character(name)){\n          score<-score + as.numeric(as.character(x[k,2]))\n          salary<-salary + as.numeric(as.character(x[k,3]))\n        }\n      }\n    }\n    hldrow1<-cbind(hldrow1,as.character(score));hldrow2<-cbind(hldrow2,as.character(salary))\n  }\n  colnames(hldrow1)<-colnames(hld);colnames(hldrow2)<-colnames(hld)\n  hld<-rbind(hld,hldrow1,hldrow2)\n  \n  \n  #CUTTING OVER L/U LIMIT / UNDER MEAN POINT VALUE\n  hldf<-NULL\n  for(i in seq(1,length(colnames(hld)),1)){\n    if(as.numeric(as.character(hld[8,i])) <= 50000 & as.numeric(as.character(hld[8,i])) >= 47000){\n      if(is.null(hldf)==TRUE){\n        hldf<-as.vector(hld[,i])\n      } else {\n        hldf<-cbind(hldf, as.vector(hld[,i]))\n      }\n    }\n  }\n  \n  #CREATE POINT CUT OFF\n  cutoff<-as.matrix(hldf[7,])\n  cutoff<-summary(as.numeric(cutoff))\n  cutoff<-cutoff[c(\"3rd Qu.\")]\n  hldb<-NULL\n  for(i in seq(1,length(colnames(hldf)),1)){\n    if(as.numeric(as.character(hldf[7,i])) >= as.numeric(cutoff)){\n      if(is.null(hldb)==TRUE){\n        hldb<-as.vector(hldf[,i])\n      } else {\n        hldb<-cbind(hldb, as.vector(hldf[,i]))\n      }\n    }\n  }  \n  \n  #loop again in case identical but out of order...\n  skip<-FALSE;hldfinal<-NULL;\n  for(i in seq(1,length(hldb[1,]),1)){\n    for(j in seq(1,length(hldb[1,]),1)){\n      skip<-compareEqual(as.matrix(hldb[1:8,i]),as.matrix(hldb[1:8,j]),ignoreDimOrder=TRUE)\n    } \n    if(!isTRUE(skip)){\n      if(is.null(hldfinal)==TRUE){\n        hldfinal<-as.vector(hldb[,i])\n      }else{\n        hldfinal<-cbind(hldfinal,as.vector(hldb[,i]))\n      }\n    }\n    skip<-FALSE\n  }\n  \n  return(hldfinal)\n}\n\n\n\n\n\nget_all_lineups_v2<-function(x){\n  \n  #ALL POSSIBLE COMBOS GIVEN ENTRY\n  #SUMS PROJECTION AND SALARY (FROM ENTRY)\n  hld<-combn(x[,1],6)\n  hld<-as.data.frame(hld)\n  hldrow1<-NULL;hldrow2<-NULL;\n  for(i in seq(1,length(colnames(hld)),1)){\n    score<-0\n    salary<-0\n    for(j in seq(1,length(hld[,1]),1)){\n      name <- hld[j,i]\n      for(k in seq(1,length(x[,1]),1)){\n        if(as.character(x[k,1]) == as.character(name)){\n          score<-score + as.numeric(as.character(x[k,2]))\n          salary<-salary + as.numeric(as.character(x[k,3]))\n        }\n      }\n    }\n    hldrow1<-cbind(hldrow1,as.character(score));hldrow2<-cbind(hldrow2,as.character(salary))\n  }\n  colnames(hldrow1)<-colnames(hld);colnames(hldrow2)<-colnames(hld)\n  hld<-rbind(hld,hldrow1,hldrow2)\n  \n  \n  #CUTTING OVER L/U LIMIT / UNDER MEAN POINT VALUE\n  hldf<-NULL\n  for(i in seq(1,length(colnames(hld)),1)){\n    if(as.numeric(as.character(hld[8,i])) <= 50000 & as.numeric(as.character(hld[8,i])) >= 47000){\n      if(is.null(hldf)==TRUE){\n        hldf<-as.vector(hld[,i])\n      } else {\n        hldf<-cbind(hldf, as.vector(hld[,i]))\n      }\n    }\n  }\n  \n  #CREATE POINT CUT OFF\n  cutoff<-as.matrix(hldf[7,])\n  cutoff<-summary(as.numeric(cutoff))\n  cutoff<-cutoff[c(\"3rd Qu.\")]\n  \n  hldb<-NULL\n  for(i in seq(1,length(colnames(hldf)),1)){\n    if(as.numeric(as.character(hldf[7,i])) >= as.numeric(cutoff)){\n      if(is.null(hldb)==TRUE){\n        hldb<-as.vector(hldf[,i])\n      } else {\n        hldb<-cbind(hldb, as.vector(hldf[,i]))\n      }\n    }\n  }  \n  \n  #loop again in case identical but out of order...\n  skip<-FALSE;hldfinal<-NULL;\n  for(i in seq(1,length(hldb[1,]),1)){\n    for(j in seq(1,length(hldb[1,]),1)){\n      skip<-compareEqual(as.matrix(hldb[1:8,i]),as.matrix(hldb[1:8,j]),ignoreDimOrder=TRUE)\n    } \n    if(!isTRUE(skip)){\n      if(is.null(hldfinal)==TRUE){\n        hldfinal<-as.vector(hldb[,i])\n      }else{\n        hldfinal<-cbind(hldfinal,as.vector(hldb[,i]))\n      }\n    }\n    skip<-FALSE\n  }\n  \n  return(hldfinal)\n}\n\n\n\n\n\n\n\n\n",
    "created" : 1475084924651.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3716755334",
    "id" : "F4D5796",
    "lastKnownWriteTime" : 1475194663,
    "path" : "C:/git/fightmetrics/fm_functions.r",
    "project_path" : "fm_functions.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}