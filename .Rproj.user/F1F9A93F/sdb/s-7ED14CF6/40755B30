{
    "contents" : "############################################################\n##############      UTILITIES     ##########################\n############################################################\nlibrary(\"rvest\")\nlibrary(\"stringr\")\nsource(\"fm_functions.r\")\nlocal_path<-\"C:\\\\git\\\\fightmetrics\\\\data\\\\\"\n\n################################################################################\n##########################     TO REFRESH      #################################\n################################################################################\n\n# \n# ############################################################\n# ##############      GENERATE EVENTS TABLES      ############\n# ############################################################\n# up_events<-read_html('http://www.fightmetric.com/statistics/events/upcoming')\n# dn_events<-read_html('http://www.fightmetric.com/statistics/events/completed?page=all')\n# up_events<-create_event_table(up_events)\n# dn_events<-create_event_table(dn_events)\n# write.csv(up_events, file=paste(local_path,\"up_events\",\".csv\"), row.names=FALSE)\n# write.csv(dn_events, file=paste(local_path,\"dn_events\",\".csv\"), row.names=FALSE)\n# \n# ############################################################\n# ##############      GENERATE FIGHTER TABLE      ############\n# ##############      TAKES A BIT THE LONGER YOU GO   ########\n# ############################################################\n# \n# dn_urls<-as.list(dn_events[2:150,1]) #PAST 3 YEARS (USADA's BEEN IN ~2?)\n# fighter_table<-NULL\n# for(i in seq(1:length(dn_urls))){\n#   hld<-get_event_stats(as.character(dn_urls[i]))\n#   fighter_table<-rbind(fighter_table,hld)\n# }\n# write.csv(fighter_table, file=paste(local_path,\"master_fighter_table\",\".csv\"), row.names=FALSE)\n# \n# ############################################################\n# ##############      GENERATE UPCOMING CARD     #############\n# ############################################################\n# #get upcoming event card\n# card<-pull_upcoming_fighters()\n# \n# # save table for each fighter\n# for(i in seq(1,length(card[,2]),1)){\n#   fighter<-get_fighter_fights(card[i])\n#   if(is.null(fighter)==FALSE) {fighter<-cbind(fighter,calculate_table_score(fighter))}\n#   write.csv(fighter, file=paste(local_path,card[i],\".csv\"), row.names=FALSE)\n# }\n# \n# write.csv(card, file=paste(local_path,\"up_card\",\".csv\"), row.names=FALSE)\n# \n# ############################################################\n# ##############      GET VEGAS ODDS              ############\n# ############################################################\n# odds<-get_betting_odds()\n# write.csv(odds, file=paste(local_path,\"odds\",\".csv\"), row.names=FALSE)\n\n\n\n#################################################################################\n###########################     TO LOAD     #####################################\n#################################################################################\nup_events <- read.csv(file=paste(local_path,\"up_events\",\".csv\"), header=TRUE, sep=\",\")\ndn_events <- read.csv(file=paste(local_path,\"dn_events\",\".csv\"), header=TRUE, sep=\",\")\nfighter_table <- read.csv(file=paste(local_path,\"master_fighter_table\",\".csv\"), header=TRUE, sep=\",\")\ncard <- read.csv(file=paste(local_path,\"up_card\",\".csv\"), header=TRUE, sep=\",\")\nodds <- read.csv(file=paste(local_path,\"odds\",\".csv\"), header=TRUE, sep=\",\")\n#path <- fighter name or card[]\n#fighter <- read.csv(file=paste(local_path,path,\".csv\"), header=TRUE, sep=\",\")\n\n\n#################################################################################\n###########################     MANIPULATION     ################################\n#################################################################################\n\n#http://www.gamblerspalace.com/lines/martial-arts/ -> fightmetrics \n#namings differ...if no odds then check line naming differences\nfor(i in seq(1,length(odds[,1]),1)){\n  if (odds[i,1] == \"LUIS HENRIQUE DA SILVA\"){odds[i,1] <- \"HENRIQUE DA SILVA\"}\n  if (odds[i,1] == \"JOSH BURKMAN\"){odds[i,1] <- \"JOSHUA BURKMAN\"}\n}\n#merge odds to upcoming card & add stats \nup_card<-merge(card, odds, by.x=\"name\", by.y=\"name\", all.x=TRUE)\nup_card<-get_fights_sums(up_card)\n#set up for side b side\nup_card[c(\"against\")] <- lapply(up_card[c(\"against\")], toupper)\nsbs_up_card<-create_fights_view(up_card)\n#up_card = vertical data \n#sbs_up_card = horizontal data\n\n\n#######IMPORT DRAFT KINGS SALARIES\n#######DEFINE VALUES\n#######MAKE LINEUP OPTIMIZER (BET THERE ARE GOOD EXAMPLES ON GITHUB)\n\n#Tips from Github\n  #optional\n# cut weak players off the bat -- salary ge other salary w/ points ge on lesser salary\n# add intake from sbs_up_card for fighter pool/settings\n  #mandatory\n# generate all combos under a salary cap\n# cut to highest predicted points\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1475079559357.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2238585211",
    "id" : "40755B30",
    "lastKnownWriteTime" : 1475160743,
    "path" : "C:/git/fightmetrics/fightmetrics.R",
    "project_path" : "fightmetrics.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}